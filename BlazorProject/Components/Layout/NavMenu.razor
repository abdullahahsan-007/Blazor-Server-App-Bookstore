@inject NavigationManager Nav
@inject BookStateService StateService
@rendermode InteractiveServer
@using YourNamespace.Models
@implements IDisposable
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

</head>
<style>
    .custom-navbar {
        height: 80px;
        font-size: 1.1rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .custom-navbar .form-select,
    .custom-navbar .form-control {
        height: 44px;
        font-size: 1rem;
    }

    .cart-panel {
        z-index: 1050;
        width: 340px;
        animation: fadeIn 0.3s ease-in-out;
    }

   keyframes fadeIn { 
      from { opacity: 0; transform: translateY(-10px); }
         to { opacity: 1; transform: translateY(0); } 
     } 

    .cart-badge {
        padding: 5px 10px;
        font-size: 0.8rem;
        border-radius: 50%;
    }

    .btn-cart {
        font-weight: 600;
        font-size: 1rem;
    }
</style>

<div class="navbar navbar-expand-lg navbar-dark px-4 custom-navbar" style="background-color: #7b1fa2;;">
    <a class="navbar-brand me-4 fs-4" href="/">
        <i class="bi bi-book-half me-1"></i> Book Store
    </a>

    <select class="form-select me-3" style="width: 200px; border-radius:25px"
            @onchange="@(e => StateService.UpdateGenre(e.Value?.ToString()))">
        <option value="">All Genres</option>
        @foreach (var genre in AppMemory.AvailableGenres)
        {
                <option value="@genre">@genre</option>
        }
    </select>
    <div style="width: 50%;   display:flex; justify-content: center; ">
    <input class="form-control me-3" style="width: 400px;border-radius:25px" placeholder="Search books..."
           @oninput="@(e => StateService.UpdateSearchTerm(e.Value?.ToString() ?? ""))" />
           </div>

      

 <div class="ms-auto">
    <div class="btn btn-warning d-flex align-items-center px-3 py-2 gap-3" style="border-radius: 0.5rem;">

        <button class="btn p-0 m-0 bg-transparent border-0 position-relative d-flex align-items-center" style="box-shadow: none;" @onclick="ToggleCart">
            <i class="bi bi-cart-plus fs-5"></i>
            <span class="badge bg-danger text-white position-absolute top-0 start-100 translate-middle p-1 rounded-circle" style="font-size: 0.6rem;">
                    @AppMemory.CartCount
            </span>
        </button>


        <div style="width: 1px; height: 20px; background-color: rgba(0,0,0,0.2);"></div>

<span class="fw-semibold">
    <a href="cart" style="text-decoration: none; color: inherit;">Cart</a>
</span>  
</div>
</div>
    @if (!string.IsNullOrEmpty(Username))
    {
        <div class="d-flex align-items-center gap-2 text-white">
                  
                <button class="btn btn-sm btn-outline-light px-3 py-1 rounded-pill" @onclick="Logout" style="margin-left:6px;">
                <i class="bi bi-box-arrow-right me-1"></i> Logout
            </button>
        </div>
    }
    else
    {
        <a href="/login" class="btn btn-outline-light btn-sm px-3 py-1 rounded-pill" style="margin-left:6px;">
            <i class="bi bi-box-arrow-in-right me-1"></i> Login
        </a>
    }


</div>

@if (showCart)
{
        <div class="bg-white border rounded shadow-lg position-absolute end-0 me-3 mt-2 p-4 cart-panel">
            <h5 class="text-primary border-bottom pb-2 mb-3">
                    <i class="bi bi-cart-plus"></i> Your Cart
            </h5>

        @if (AppMemory.Cart.Count == 0)
        {
                    <div class="text-muted text-center py-3">No items in cart.</div>
        }
        else
        {
                    <ul class="list-group mb-3">
                @foreach (var item in AppMemory.Cart)
                {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="flex-grow-1">
                                        <strong>@item.Title</strong>
                                        <div class="small text-muted">Qty: @item.Quantity</div>
                                    </div>
                                    <span class="fw-bold text-success">$@item.Price</span>
                                </li>
                }
                    </ul>

                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-danger btn-sm" @onclick="ClearCart">
                            <i class="bi bi-trash3 me-1"></i> Clear Cart
                        </button>
                        <a href="/cart" class="btn btn-primary btn-sm text-white">
                            <i class="bi bi-box-arrow-in-right me-1"></i> Go to Cart
                        </a>
                    </div>
        }
        </div>
              

}
  

@code {
    private bool showCart = false;
    private string Username => AppMemory.CurrentUsername;
    void ToggleCart() => showCart = !showCart;
    void ClearCart()
    {
        AppMemory.ClearCart();
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        AppMemory.OnChange += StateHasChanged;
        StateService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppMemory.OnChange -= StateHasChanged;
        StateService.OnChange -= StateHasChanged;
    }
    
    
    

        void Logout()
        {
    AppMemory.CurrentUsername = null;
    AppMemory.CurrentRole = null;
    AppMemory.ClearCart();
    Nav.NavigateTo("/");
        }
}
